{
	"info": {
		"_postman_id": "bad8690f-ebc0-4f59-a44c-d6a0fae74fa1",
		"name": "Mini E-Commerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "40836439"
	},
	"item": [
		{
			"name": "1. Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set('userId', pm.response.json().userId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json(); \r",
							"\r",
							"pm.test(\"username, email and password are present\", function () {\r",
							"    pm.expect(jsonData).to.not.have.property(\"username\"); \r",
							"    pm.expect(jsonData).to.not.have.property(\"email\"); \r",
							"    pm.expect(jsonData).to.not.have.property(\"password\"); \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user1\",\n  \"email\": \"user1@example.com\",\n  \"password\": \"pass123\"\n}"
				},
				"url": "{{base_url}}/register"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"user1\",\n  \"email\": \"user1@example.com\",\n  \"password\": \"pass123\"\n}"
						},
						"url": "{{base_url}}/register"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"userId\": \"abc123\"\n}"
				}
			]
		},
		{
			"name": "2. Login - Wrong Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login fails with invalid password\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"let jsonData = pm.response.json();",
							"",
							"pm.test(\"Error message indicates invalid credentials\", function () {",
							"    pm.expect(jsonData.error).to.match(/Invalid credentials/);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user1\",\n  \"password\": \"wrongpass\"\n}"
				},
				"url": "{{base_url}}/login"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"user1\",\n  \"password\": \"wrongpass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/login"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"Invalid credentials\"\n}"
				}
			]
		},
		{
			"name": "3. Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set('token', pm.response.json().token);\r",
							"\r",
							"pm.test(\"User is logged in successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user1\",\n  \"password\": \"pass123\"\n}"
				},
				"url": "{{base_url}}/login"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"user1\",\n  \"password\": \"pass123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/login"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"token\": \"mocked-token\"\n}"
				}
			]
		},
		{
			"name": "4. Get Profile",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/profile"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": "{{base_url}}/profile"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"userId\": \"abc123\",\n  \"email\": \"user1@example.com\",\n  \"name\": \"User One\"\n}"
				}
			]
		},
		{
			"name": "5. List Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Items list is not empty\", function () {",
							"    pm.expect(response.length).to.be.above(0);",
							"});",
							"",
							"// Validate that each item has an id",
							"pm.test(\"Each item has a valid id\", function () {",
							"    response.forEach(item => {",
							"        pm.expect(item).to.have.property(\"id\");",
							"        pm.expect(item.id).to.be.a(\"string\").that.is.not.empty;",
							"",
							"        // Save the item id as a variable",
							"        pm.environment.set(`item_id_${item.id}`, item.id);",
							"    });",
							"});",
							"",
							"// Save the first item id globally for later use",
							"const firstItemId = response[0].id;",
							"pm.environment.set(\"itemId\", firstItemId);",
							"console.log(\"Saved itemId:\", firstItemId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/items"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": "{{base_url}}/items"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"item1\",\n    \"name\": \"Phone\",\n    \"price\": 499\n  },\n  {\n    \"id\": \"item2\",\n    \"name\": \"TV\",\n    \"price\": 899\n  },\n  {\n    \"id\": \"item3\",\n    \"name\": \"Case\",\n    \"price\": 25\n  },\n  {\n    \"id\": \"item4\",\n    \"name\": \"Headphones\",\n    \"price\": 120\n  }\n]"
				}
			]
		},
		{
			"name": "Delete an Item By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Item deleted successfully\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
							"});\r",
							"\r",
							"// Clear variable after deletion\r",
							"pm.environment.unset(\"item_id_item1\");\r",
							"console.log(\"Deleted item and cleared itemId variable\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/items/{{itemId}}"
			},
			"response": []
		},
		{
			"name": "7. Add to Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cartId\": \"mock-cart-123\",\n  \"itemId\": \"{{item_id_item3}}\",\n  \"quantity\": 1\n}"
				},
				"url": "{{base_url}}/cart"
			},
			"response": [
				{
					"name": "7. Add to Cart",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cartId\": \"mock-cart-123\",\n  \"itemId\": \"{{item_id_item3}}\",\n  \"quantity\": 1\n}"
						},
						"url": "{{base_url}}/cart"
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 20 Aug 2025 07:55:29 GMT"
						},
						{
							"key": "Content-Type",
							"value": "text/html"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "x-envoy-upstream-service-time",
							"value": "3"
						},
						{
							"key": "cf-cache-status",
							"value": "DYNAMIC"
						},
						{
							"key": "Set-Cookie",
							"value": "__cf_bm=8v0Da_d45maHBBR0P0K0sxWOS13PiYXlzrDj_kZsje4-1755676529-1.0.1.1-ep8o4YEf7MhZpQ9E10YwZD1rXG_WLWjcf.HCIt3oOJTY.OZE4SOKM65SWOlT2D04aRTzG2IF4FCRhjvDhLWmeVnglRWQ81w907pwU.Fy1h0; path=/; expires=Wed, 20-Aug-25 08:25:29 GMT; domain=.pstmn.io; HttpOnly; Secure; SameSite=None"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "972054245eddd64d-IAD"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n  \"cartId\": \"mock-cart-123\",\n  \"items\": [\n    { \"id\": \"item1\", \"name\": \"Phone\", \"price\": 499, \"quantity\": 1 }\n  ]\n}\n"
				}
			]
		},
		{
			"name": "8. Add to Cart - Invalid Item ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Item not found\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"itemId\": \"{{$randomAlphaNumeric}}\",\n  \"quantity\": 1\n}"
				},
				"url": "{{base_url}}/cart"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemId\": \"invalid123\",\n  \"quantity\": 1\n}"
						},
						"url": "{{base_url}}/cart"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"Item not found\"\n}"
				}
			]
		},
		{
			"name": "9. View Cart",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": "{{base_url}}/cart"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": "{{base_url}}/cart"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"cartId\": \"mock-cart-123\",\n  \"items\": [\n    { \"id\": \"item1\", \"name\": \"Phone\", \"price\": 499, \"quantity\": 1 }\n  ]\n}\n"
				}
			]
		},
		{
			"name": "10. Submit Payment - Expired Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Payment declined\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json().paymentStatus).to.eql(\"declined\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cardNumber\": \"4111111111111111\",\n  \"expiry\": \"12/20\",\n  \"cvv\": \"123\",\n  \"method\": \"card\"\n}"
				},
				"url": "{{base_url}}/payment"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cardNumber\": \"4111111111111111\",\n  \"expiry\": \"12/20\",\n  \"cvv\": \"123\",\n  \"method\": \"card\"\n}"
						},
						"url": "{{base_url}}/payment"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"paymentStatus\": \"declined\",\n  \"reason\": \"Card expired\"\n}"
				}
			]
		},
		{
			"name": "11. Submit Payment - Missing CVV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Missing CVV\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cardNumber\": \"4111111111111111\",\n  \"expiry\": \"12/25\",\n  \"method\": \"card\"\n}"
				},
				"url": "{{base_url}}/payment"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cardNumber\": \"4111111111111111\",\n  \"expiry\": \"12/25\",\n  \"method\": \"card\"\n}"
						},
						"url": "{{base_url}}/payment"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"CVV is required\"\n}"
				}
			]
		},
		{
			"name": "12. Submit Payment - PayPal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"PayPal Payment\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json().paymentStatus).to.eql(\"approved\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"paypalEmail\": \"user@paypal.com\",\n  \"method\": \"paypal\"\n}"
				},
				"url": "{{base_url}}/payment"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"paypalEmail\": \"user@paypal.com\",\n  \"method\": \"paypal\"\n}"
						},
						"url": "{{base_url}}/payment"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"paymentStatus\": \"approved\"\n}"
				}
			]
		},
		{
			"name": "13. Submit Payment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cardNumber\": \"4111111111111111\",\n  \"expiry\": \"12/25\",\n  \"cvv\": \"123\"\n}"
				},
				"url": "{{base_url}}/payment"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cardNumber\": \"4111111111111111\",\n  \"expiry\": \"12/25\",\n  \"cvv\": \"123\"\n}"
						},
						"url": "{{base_url}}/payment"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"paymentStatus\": \"approved\"\n}"
				}
			]
		},
		{
			"name": "14. Place Order",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": "{{base_url}}/order"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": "{{base_url}}/order"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"orderId\": \"order789\",\n  \"status\": \"confirmed\"\n}"
				}
			]
		},
		{
			"name": "15. Logout",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": "{{base_url}}/logout"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": "{{base_url}}/logout"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Logged out successfully\"\n}"
				}
			]
		},
		{
			"name": "16. Register - Missing Fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Missing credentials\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"\",\n  \"email\": \"user2@example.com\"\n}"
				},
				"url": "{{base_url}}/register"
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"\",\n  \"email\": \"user2@example.com\"\n}"
						},
						"url": "{{base_url}}/register"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"Password is required\"\n}"
				}
			]
		}
	]
}
